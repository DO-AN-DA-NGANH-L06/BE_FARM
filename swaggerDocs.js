/**
 * @swagger
 * /auth/register:
 *   post:
 *     summary: ƒêƒÉng k√Ω ng∆∞·ªùi d√πng m·ªõi
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required: [username, password]
 *             properties:
 *               username:
 *                 type: string
 *               password:
 *                 type: string
 *     responses:
 *       201:
 *         description: ƒêƒÉng k√Ω th√†nh c√¥ng
 *       400:
 *         description: Thi·∫øu username ho·∫∑c password
 *       409:
 *         description: Username ƒë√£ c√≥ r·ªìi
 *       500:
 *         description: L·ªói trong server
 */

/**
 * @swagger
 * /auth/login:
 *   post:
 *     summary: ƒêƒÉng nh·∫≠p
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             required: [username, password]
 *             properties:
 *               username:
 *                 type: string
 *               password:
 *                 type: string
 *     responses:
 *       200:
 *         description: Tr·∫£ v·ªÅ token
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 token:
 *                   type: string
 *       401:
 *         description: Kh√¥ng kh·ªõp
 *       500:
 *         description: L·ªói trong server
 */

/**
 * @swagger
 * /auth/logout:
 *   post:
 *     summary: ƒêƒÉng xu·∫•t
 *     responses:
 *       200:
 *         description: ƒêƒÉng xu·∫•t
 */

/**
 * @swagger
 * /device/limited:
 *   post:
 *     summary: Thi·∫øt l·∫≠p gi·ªõi h·∫°n cho thi·∫øt b·ªã
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               device:
 *                 type: string
 *                 enum: [soil, humid, led, pump, light, temp]
 *               limit_up:
 *                 type: number
 *               limit_down:
 *                 type: number
 *     responses:
 *       200:
 *         description: ƒê√£ l∆∞u gi·ªõi h·∫°n
 *       400:
 *         description: Thi·∫øu th√¥ng tin
 *       500:
 *         description: L·ªói server
 */

/**
 * @swagger
 * /device/limited?device={device}:
 *   get:
 *     summary: L·∫•y gi·ªõi h·∫°n cho thi·∫øt b·ªã
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: query
 *         name: device
 *         required: true
 *         schema:
 *           type: string
 *           enum: [soil, humid, led, pump, light, temp]
 *         description: Lo·∫°i thi·∫øt b·ªã c·∫ßn l·∫•y gi·ªõi h·∫°n
 *     responses:
 *       200:
 *         description: D·ªØ li·ªáu limited c·ªßa c·∫£m bi·∫øn
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 items:
 *                   type: object
 *                   properties:
 *                     limit_up:
 *                       type: number
 *                     limit_down:
 *                       type: number
 *       400:
 *         description: Thi·∫øu th√¥ng tin
 *       500:
 *         description: L·ªói server
 */


/**
 * @swagger
 * /device/graph:
 *   get:
 *     summary: L·∫•y d·ªØ li·ªáu bi·ªÉu ƒë·ªì
 *     security:
 *       - bearerAuth: []
 *     responses:
 *       200:
 *         description: D·ªØ li·ªáu c·∫£m bi·∫øn
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 temp:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       timestamp:
 *                         type: string
 *                       value:
 *                         type: number
 *                 humid:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       timestamp:
 *                         type: string
 *                       value:
 *                         type: number
 *                 light:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       timestamp:
 *                         type: string
 *                       value:
 *                         type: number
 *                 soil:
 *                   type: array
 *                   items:
 *                     type: object
 *                     properties:
 *                       timestamp:
 *                         type: string
 *                       value:
 *                         type: number
 *       500:
 *         description: L·ªói server khi truy v·∫•n
 */

/**
 * @swagger
 * /device/control:
 *   post:
 *     summary: ƒêi·ªÅu khi·ªÉn thi·∫øt b·ªã (led ho·∫∑c pump)
 *     security:
 *       - bearerAuth: []
 *     requestBody:
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               device:
 *                 type: string
 *                 enum: [led, pump]
 *               level:
 *                 type: number
 *                 minimum: 0
 *                 maximum: 100
 *     responses:
 *       200:
 *         description: ƒê√£ g·ª≠i m·ª©c ƒë·ªô
 *       400:
 *         description: D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá
 */

/**
 * @swagger
 * Socket-io:
 *   get:
 *     summary: M√¥ t·∫£ socket emit
 *     description: |
 *       C√°c socket emit:
 *       - `new-data`: { feed, value }
 *       - `notification`: { feed, value } (d√†nh cho th√¥ng b√°o feed c√≥ value ƒëang v∆∞·ª£t ra ngo√†i limit) ho·∫∑c { noti } (d√†nh cho th√¥ng b√°o ƒë√£ b·∫≠t led v√† pump ƒë·ªÉ kh·∫Øc ph·ª•c)
 *       - noti l√† : ƒê√£ ti·∫øn h√†nh b·∫≠t thi·∫øt b·ªã trong v√≤ng 5s ƒë·ªÉ c·ªë g·∫Øng kh·∫Øc ph·ª•c
 *       - Feed g·ªìm: farmgenius-grapegrow.bbc-humidity ,farmgenius-grapegrow.bbc-light, farmgenius-grapegrow.bbc-temp, farmgenius-grapegrow.bbc-soil, farmgenius-grapegrow.bbc-pump, farmgenius-grapegrow.bbc-led
 *     responses:
 *       200:
 *         description: M√¥ t·∫£ th√†nh c√¥ng
 */

// üëá dummy ƒë·ªÉ tr√°nh l·ªói n·∫øu c·∫ßn export
module.exports = {};
